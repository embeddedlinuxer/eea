;******************************************************************************
;* TMS320C3x/4x ANSI C Code Generator                            Version 5.11 *
;* Date/Time created: Mon Oct 31 11:29:49 2011                                *
;******************************************************************************
	.regalias	; enable floating point register aliases
fp	.set	ar3
FP	.set	ar3
;******************************************************************************
;* GLOBAL FILE PARAMETERS                                                     *
;*                                                                            *
;*   Optimization       : Always Choose Smaller Code Size                     *
;*   Memory             : Big Memory Model                                    *
;*   Float-to-Int       : Normal Conversions (round toward zero)              *
;*   Multiply           : in Software (32 bits)                               *
;*   Memory Info        : Unmapped Memory Exists                              *
;*   Repeat Loops       : Use RPTS and/or RPTB                                *
;*   Calls              : Normal Library ASM calls                            *
;*   Debug Info         : Standard TI Debug Information                       *
;******************************************************************************
;	C:\tic3x4x\c3x4x\cgtools\bin\ac30.exe -@_5TK.AAA 
	.file	"buffer.c"
	.file	"D:\CCS\EEA_SA_V611beta\INCLUDE\ETC.H"
	.sym	_BOOL,0,14,13,32
	.file	"D:\CCS\EEA_SA_V611beta\BOOT\SOURCE\INCLUDE\BUFFER.H"
	.stag	.fake0,131744
	.member	_head,0,4,8,32
	.member	_tail,32,4,8,32
	.member	_n,64,4,8,32
	.member	_CRC16,96,14,8,32
	.member	_buff,128,62,8,131584,,4112
	.member	_locked,131712,14,8,32
	.eos
	.sym	_BFR,0,8,13,131744,.fake0
	.file	"D:\CCS\EEA_SA_V611beta\INCLUDE\FLASH.H"
	.file	"D:\CCS\EEA_SA_V611beta\BOOT\SOURCE\INCLUDE\SERIAL.H"
	.stag	.fake1,263936
	.member	_STAT,0,12,8,32
	.member	_TMR_Network_WDOG,32,14,8,32
	.member	_TMR_EOT_Delay,64,14,8,32
	.member	_TMR_Preamble_Delay,96,14,8,32
	.member	_TMR_Suffix_Delay,128,14,8,32
	.member	_TMR_Char,160,14,8,32
	.member	_TMR_enabled,192,14,8,32
	.member	_tvector,224,20,8,32
	.member	_pvector,256,20,8,32
	.member	_i,288,14,8,32
	.member	_func,320,14,8,32
	.member	_Slave_ID,352,14,8,32
	.member	_TXbuf,384,8,8,131744,.fake0
	.member	_TX_complete,132128,14,8,32
	.member	_RXbuf,132160,8,8,131744,.fake0
	.member	_RX_pending,263904,14,8,32
	.eos
	.sym	_PORTV,0,8,13,263936,.fake1
	.file	"D:\CCS\EEA_SA_V611beta\BOOT\SOURCE\INCLUDE\MODBUSRTU.H"
	.file	"D:\CCS\EEA_SA_V611beta\INCLUDE\I2C.H"
	.file	"D:\CCS\EEA_SA_V611beta\BOOT\SOURCE\INCLUDE\GLBLS.H"
	.file	"buffer.c"
	.sect	 ".text"

	.global	_CRC16
	.sym	_CRC16,_CRC16,32,2,0
	.func	14
;******************************************************************************
;* FUNCTION NAME: _CRC16                                                      *
;*                                                                            *
;*   Architecture       : TMS320C33                                           *
;*   Calling Convention : TI Standard Register Parameters                     *
;*   Function Uses Regs : r0,ar0,ar1,ar2,st                                   *
;*   Regs Saved         :                                                     *
;*   Stack Frame        : Full (w/ debug)                                     *
;*   Total Frame Size   : 2 Call + 0 Parm + 2 Auto + 0 SOE = 4 words          *
;******************************************************************************
_CRC16:
;* ar2   assigned to _buffer
	.sym	_buffer,10,24,17,32,.fake0
	.sym	_buffer,1,24,1,32,.fake0
	.sym	_i,2,4,1,32
	.line	1
;----------------------------------------------------------------------
;  14 | void CRC16(BFR* buffer)                                                
;----------------------------------------------------------------------
        push      fp
        ldiu      sp,fp
        addi      2,sp
	.line	2
;----------------------------------------------------------------------
;  16 | int i;                                                                 
;----------------------------------------------------------------------
        sti       ar2,*+fp(1)           ; |15| 
	.line	5
;----------------------------------------------------------------------
;  18 | if (buffer->n<=0) return;                                              
;----------------------------------------------------------------------
        ldiu      ar2,ar0
        ldiu      *+ar0(2),r0           ; |18| 
        cmpi      0,r0                  ; |18| 
        ble       L9                    ; |18| 
;*      Branch Occurs to L9             ; |18| 
	.line	7
;----------------------------------------------------------------------
;  20 | if (buffer->n==1)                                                      
;----------------------------------------------------------------------
        ldiu      *+ar0(2),r0           ; |20| 
        cmpi      1,r0                  ; |20| 
        bne       L4                    ; |20| 
;*      Branch Occurs to L4             ; |20| 
	.line	9
;----------------------------------------------------------------------
;  22 | buffer->CRC16 = GSEED;                                                 
;----------------------------------------------------------------------
        ldiu      4931,r0               ; |22| 
        sti       r0,*+ar0(3)           ; |22| 
L4:        
	.line	12
;----------------------------------------------------------------------
;  25 | buffer->CRC16 ^= (buffer->buff[buffer->tail] & 0xFF);                  
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |25| 
        ldiu      255,r0                ; |25| 
        ldiu      *+ar0(1),ar1          ; |25| 
        addi      *+fp(1),ar1           ; |25| Unsigned
        and       *+ar1(4),r0           ; |25| 
        xor       *+ar0(3),r0           ; |25| 
        sti       r0,*+ar0(3)           ; |25| 
	.line	14
;----------------------------------------------------------------------
;  27 | for (i=0;i<8;i++)                                                      
;----------------------------------------------------------------------
        ldiu      0,r0                  ; |27| 
        sti       r0,*+fp(2)            ; |27| 
        cmpi      8,r0                  ; |27| 
        bge       L9                    ; |27| 
;*      Branch Occurs to L9             ; |27| 
L5:        
	.line	16
;----------------------------------------------------------------------
;  29 | if (buffer->CRC16 & 0x01)                                              
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |29| 
        ldiu      1,r0                  ; |29| 
        tstb      *+ar0(3),r0           ; |29| 
        beq       L7                    ; |29| 
;*      Branch Occurs to L7             ; |29| 
	.line	18
;----------------------------------------------------------------------
;  31 | buffer->CRC16 >>= 1;                                                   
;----------------------------------------------------------------------
        ldiu      *+ar0(3),r0           ; |31| 
        lsh       -1,r0                 ; |31| 
        sti       r0,*+ar0(3)           ; |31| 
	.line	19
;----------------------------------------------------------------------
;  32 | buffer->CRC16 ^= GPOLY;                                                
;  34 | else                                                                   
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |32| 
        ldiu      *+ar0(3),r0           ; |32| 
        xor       40961,r0              ; |32| 
        sti       r0,*+ar0(3)           ; |32| 
        bu        L8                    ; |13| 
;*      Branch Occurs to L8             ; |13| 
L7:        
	.line	23
;----------------------------------------------------------------------
;  36 | buffer->CRC16 >>= 1;                                                   
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |36| 
        ldiu      *+ar0(3),r0           ; |36| 
        lsh       -1,r0                 ; |36| 
        sti       r0,*+ar0(3)           ; |36| 
L8:        
	.line	14
        ldiu      1,r0                  ; |27| 
        addi      *+fp(2),r0            ; |27| 
        sti       r0,*+fp(2)            ; |27| 
        cmpi      8,r0                  ; |27| 
        blt       L5                    ; |27| 
;*      Branch Occurs to L5             ; |27| 
L9:        
	.line	26
                                        ; Begin Epilog Code
        ldiu      *-fp(1),r1
        ldiu      *fp,fp
                                        ; Unallocate the Frame
        subi      4,sp
        bu        r1
;*      Branch Occurs to r1 
	.endfunc	39,000000000h,2


	.sect	 ".text"

	.global	_Put
	.sym	_Put,_Put,46,2,0
	.func	41
;******************************************************************************
;* FUNCTION NAME: _Put                                                        *
;*                                                                            *
;*   Architecture       : TMS320C33                                           *
;*   Calling Convention : TI Standard Register Parameters                     *
;*   Function Uses Regs : r0,r2,ar0,ar2,ir0,st                                *
;*   Regs Saved         :                                                     *
;*   Stack Frame        : Full (w/ debug)                                     *
;*   Total Frame Size   : 2 Call + 0 Parm + 2 Auto + 0 SOE = 4 words          *
;******************************************************************************
_Put:
;* ar2   assigned to _buffer
	.sym	_buffer,10,24,17,32,.fake0
;* r2    assigned to _b
	.sym	_b,2,14,17,32
	.sym	_buffer,1,24,1,32,.fake0
	.sym	_b,2,14,1,32
	.line	1
;----------------------------------------------------------------------
;  41 | BOOL Put(BFR* buffer, unsigned int b)                                  
;----------------------------------------------------------------------
        push      fp
        ldiu      sp,fp
        addi      2,sp
	.line	2
        sti       r2,*+fp(2)            ; |42| 
        sti       ar2,*+fp(1)           ; |42| 
	.line	3
;----------------------------------------------------------------------
;  43 | if (buffer->locked) return FALSE;                                      
;----------------------------------------------------------------------
        ldiu      ar2,ir0               ; |43| 
        ldiu      4116,ar0              ; |43| 
        ldiu      *+ar0(ir0),r0         ; |43| 
        cmpi      0,r0                  ; |43| 
        beq       L13                   ; |43| 
;*      Branch Occurs to L13            ; |43| 
        bud       L18                   ; |43| 
	nop
	nop
        ldiu      0,r0                  ; |43| 
;*      Branch Occurs to L18            ; |43| 
L13:        
	.line	5
;----------------------------------------------------------------------
;  45 | _GIEP;                                                                 
;----------------------------------------------------------------------
	push	ST			
	andn	2000h, ST	
	.line	7
;----------------------------------------------------------------------
;  47 | if (buffer->n >= MAXBUFF)                                              
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |47| 
        ldiu      *+ar0(2),r0           ; |47| 
        cmpi      4112,r0               ; |47| 
        blt       L15                   ; |47| 
;*      Branch Occurs to L15            ; |47| 
	.line	9
;----------------------------------------------------------------------
;  49 | GIEP;                                                                  
;----------------------------------------------------------------------
	pop		ST			
	.line	10
;----------------------------------------------------------------------
;  50 | return FALSE;                                                          
;----------------------------------------------------------------------
        bud       L18                   ; |50| 
	nop
	nop
        ldiu      0,r0                  ; |50| 
;*      Branch Occurs to L18            ; |50| 
L15:        
	.line	12
;----------------------------------------------------------------------
;  52 | buffer->buff[buffer->tail] = b;                                        
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |52| 
        ldiu      *+ar0(1),ar0          ; |52| 
        addi      *+fp(1),ar0           ; |52| Unsigned
        ldiu      *+fp(2),r0            ; |52| 
        sti       r0,*+ar0(4)           ; |52| 
	.line	13
;----------------------------------------------------------------------
;  53 | buffer->n ++;                                                          
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |53| 
        ldiu      1,r0                  ; |53| 
        addi      *+ar0(2),r0           ; |53| 
        sti       r0,*+ar0(2)           ; |53| 
	.line	14
;----------------------------------------------------------------------
;  54 | CRC16(buffer);                                                         
;----------------------------------------------------------------------
        ldp       @CL1,DP
        ldiu      *+fp(1),ar2           ; |54| 
        ldiu      @CL1,r0               ; |54| 
        callu     r0                    ; far call to _CRC16	; |54| 
                                        ; |54| Far Call Occurs
	.line	15
;----------------------------------------------------------------------
;  55 | buffer->tail ++;                                                       
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |55| 
        ldiu      1,r0                  ; |55| 
        addi      *+ar0(1),r0           ; |55| 
        sti       r0,*+ar0(1)           ; |55| 
	.line	16
;----------------------------------------------------------------------
;  56 | if (buffer->tail >= MAXBUFF) buffer->tail = 0;                         
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |56| 
        ldiu      *+ar0(1),r0           ; |56| 
        cmpi      4112,r0               ; |56| 
        blt       L17                   ; |56| 
;*      Branch Occurs to L17            ; |56| 
        ldiu      0,r0                  ; |56| 
        sti       r0,*+ar0(1)           ; |56| 
L17:        
	.line	18
;----------------------------------------------------------------------
;  58 | GIEP;                                                                  
;----------------------------------------------------------------------
	pop		ST			
	.line	20
;----------------------------------------------------------------------
;  60 | return TRUE;                                                           
;----------------------------------------------------------------------
        ldiu      1,r0                  ; |60| 
L18:        
	.line	21
                                        ; Begin Epilog Code
        ldiu      *-fp(1),r1            ; |61| 
        ldiu      *fp,fp                ; |61| 
                                        ; Unallocate the Frame
        subi      4,sp                  ; |61| 
        bu        r1
;*      Branch Occurs to r1 
	.endfunc	61,000000000h,2


	.sect	 ".text"

	.global	_Get
	.sym	_Get,_Get,36,2,0
	.func	63
;******************************************************************************
;* FUNCTION NAME: _Get                                                        *
;*                                                                            *
;*   Architecture       : TMS320C33                                           *
;*   Calling Convention : TI Standard Register Parameters                     *
;*   Function Uses Regs : r0,ar0,ar2,ir0,st                                   *
;*   Regs Saved         :                                                     *
;*   Stack Frame        : Full (w/ debug)                                     *
;*   Total Frame Size   : 2 Call + 0 Parm + 2 Auto + 0 SOE = 4 words          *
;******************************************************************************
_Get:
;* ar2   assigned to _buffer
	.sym	_buffer,10,24,17,32,.fake0
	.sym	_buffer,1,24,1,32,.fake0
	.sym	_r,2,12,1,32
	.line	1
;----------------------------------------------------------------------
;  63 | int Get(BFR* buffer)                                                   
;----------------------------------------------------------------------
        push      fp
        ldiu      sp,fp
        addi      2,sp
	.line	2
;----------------------------------------------------------------------
;  65 | unsigned char r;                                                       
;----------------------------------------------------------------------
        sti       ar2,*+fp(1)           ; |64| 
	.line	5
;----------------------------------------------------------------------
;  67 | if (buffer->locked) return FALSE;                                      
;----------------------------------------------------------------------
        ldiu      ar2,ir0               ; |67| 
        ldiu      4116,ar0              ; |67| 
        ldiu      *+ar0(ir0),r0         ; |67| 
        cmpi      0,r0                  ; |67| 
        beq       L22                   ; |67| 
;*      Branch Occurs to L22            ; |67| 
        bud       L27                   ; |67| 
	nop
	nop
        ldiu      0,r0                  ; |67| 
;*      Branch Occurs to L27            ; |67| 
L22:        
	.line	7
;----------------------------------------------------------------------
;  69 | _GIEP;                                                                 
;----------------------------------------------------------------------
	push	ST			
	andn	2000h, ST	
	.line	9
;----------------------------------------------------------------------
;  71 | if (buffer->n <= 0)                                                    
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |71| 
        ldiu      *+ar0(2),r0           ; |71| 
        cmpi      0,r0                  ; |71| 
        bgt       L24                   ; |71| 
;*      Branch Occurs to L24            ; |71| 
	.line	11
;----------------------------------------------------------------------
;  73 | GIEP;                                                                  
;----------------------------------------------------------------------
	pop		ST			
	.line	12
;----------------------------------------------------------------------
;  74 | return NULL;                                                           
;----------------------------------------------------------------------
        bud       L27                   ; |74| 
	nop
	nop
        ldiu      0,r0                  ; |74| 
;*      Branch Occurs to L27            ; |74| 
L24:        
	.line	15
;----------------------------------------------------------------------
;  77 | r = buffer->buff[buffer->head];                                        
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |77| 
        ldiu      *ar0,ar0              ; |77| 
        addi      *+fp(1),ar0           ; |77| Unsigned
        ldiu      *+ar0(4),r0           ; |77| 
        sti       r0,*+fp(2)            ; |77| 
	.line	17
;----------------------------------------------------------------------
;  79 | buffer->head ++;                                                       
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |79| 
        ldiu      1,r0                  ; |79| 
        addi3     r0,*ar0,r0            ; |79| 
        sti       r0,*ar0               ; |79| 
	.line	18
;----------------------------------------------------------------------
;  80 | if (buffer->head >= MAXBUFF) buffer->head = 0;                         
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |80| 
        ldiu      *ar0,r0               ; |80| 
        cmpi      4112,r0               ; |80| 
        blt       L26                   ; |80| 
;*      Branch Occurs to L26            ; |80| 
        ldiu      0,r0                  ; |80| 
        sti       r0,*ar0               ; |80| 
L26:        
	.line	19
;----------------------------------------------------------------------
;  81 | buffer->n --;                                                          
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |81| 
        ldiu      1,r0                  ; |81| 
        subri     *+ar0(2),r0           ; |81| 
        sti       r0,*+ar0(2)           ; |81| 
	.line	21
;----------------------------------------------------------------------
;  83 | GIEP;                                                                  
;----------------------------------------------------------------------
	pop		ST			
	.line	23
;----------------------------------------------------------------------
;  85 | return r;                                                              
;----------------------------------------------------------------------
        ldiu      *+fp(2),r0            ; |85| 
L27:        
	.line	24
                                        ; Begin Epilog Code
        ldiu      *-fp(1),r1            ; |86| 
        ldiu      *fp,fp                ; |86| 
                                        ; Unallocate the Frame
        subi      4,sp                  ; |86| 
        bu        r1
;*      Branch Occurs to r1 
	.endfunc	86,000000000h,2


	.sect	 ".text"

	.global	_Clear
	.sym	_Clear,_Clear,32,2,0
	.func	88
;******************************************************************************
;* FUNCTION NAME: _Clear                                                      *
;*                                                                            *
;*   Architecture       : TMS320C33                                           *
;*   Calling Convention : TI Standard Register Parameters                     *
;*   Function Uses Regs : r0,r1,ar0,ar2,ir0,st                                *
;*   Regs Saved         :                                                     *
;*   Stack Frame        : Full (w/ debug)                                     *
;*   Total Frame Size   : 2 Call + 0 Parm + 2 Auto + 0 SOE = 4 words          *
;******************************************************************************
_Clear:
;* ar2   assigned to _buffer
	.sym	_buffer,10,24,17,32,.fake0
	.sym	_buffer,1,24,1,32,.fake0
	.sym	_i,2,4,1,32
	.line	1
;----------------------------------------------------------------------
;  88 | void Clear(BFR* buffer)                                                
;----------------------------------------------------------------------
        push      fp
        ldiu      sp,fp
        addi      2,sp
	.line	2
;----------------------------------------------------------------------
;  90 | int i;                                                                 
;----------------------------------------------------------------------
        sti       ar2,*+fp(1)           ; |89| 
	.line	5
;----------------------------------------------------------------------
;  92 | _GIEP;                                                                 
;----------------------------------------------------------------------
	push	ST			
	andn	2000h, ST	
	.line	7
;----------------------------------------------------------------------
;  94 | if (INITIALIZING) buffer->locked = FALSE;                              
;  95 | else                                                                   
;----------------------------------------------------------------------
        ldp       @CL2,DP
        ldiu      @CL2,ar0              ; |94| 
        ldiu      *ar0,r0               ; |94| 
        cmpi      0,r0                  ; |94| 
        beq       L31                   ; |94| 
;*      Branch Occurs to L31            ; |94| 
        ldiu      ar2,ir0
        ldiu      4116,ar0              ; |94| 
        ldiu      0,r0                  ; |94| 
        sti       r0,*+ar0(ir0)         ; |94| 
        bu        L33                   ; |87| 
;*      Branch Occurs to L33            ; |87| 
L31:        
	.line	9
;----------------------------------------------------------------------
;  96 | if (buffer->locked)                                                    
;----------------------------------------------------------------------
        ldiu      *+fp(1),ir0           ; |96| 
        ldiu      4116,ar0              ; |96| 
        ldiu      *+ar0(ir0),r0         ; |96| 
        cmpi      0,r0                  ; |96| 
        beq       L33                   ; |96| 
;*      Branch Occurs to L33            ; |96| 
	.line	11
;----------------------------------------------------------------------
;  98 | GIEP;                                                                  
;----------------------------------------------------------------------
	pop		ST			
	.line	12
;----------------------------------------------------------------------
;  99 | return;                                                                
;----------------------------------------------------------------------
        bu        L37                   ; |99| 
;*      Branch Occurs to L37            ; |99| 
L33:        
	.line	15
;----------------------------------------------------------------------
; 102 | buffer->head = 0;                                                      
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |102| 
        ldiu      0,r0                  ; |102| 
        sti       r0,*ar0               ; |102| 
	.line	16
;----------------------------------------------------------------------
; 103 | buffer->tail = 0;                                                      
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |103| 
        sti       r0,*+ar0(1)           ; |103| 
	.line	17
;----------------------------------------------------------------------
; 104 | buffer->n = 0;                                                         
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |104| 
        sti       r0,*+ar0(2)           ; |104| 
	.line	19
;----------------------------------------------------------------------
; 106 | if (INITIALIZING)                                                      
;----------------------------------------------------------------------
        ldp       @CL2,DP
        ldiu      @CL2,ar0              ; |106| 
        ldiu      *ar0,r0               ; |106| 
        cmpi      0,r0                  ; |106| 
        beq       L36                   ; |106| 
;*      Branch Occurs to L36            ; |106| 
	.line	21
;----------------------------------------------------------------------
; 108 | buffer->CRC16 = GSEED;                                                 
;----------------------------------------------------------------------
        ldiu      *+fp(1),ar0           ; |108| 
        ldiu      4931,r0               ; |108| 
        sti       r0,*+ar0(3)           ; |108| 
	.line	22
;----------------------------------------------------------------------
; 109 | for (i=0;i<MAXBUFF;i++)                                                
;----------------------------------------------------------------------
        ldiu      0,r0                  ; |109| 
        sti       r0,*+fp(2)            ; |109| 
        ldiu      0,r1                  ; |111| 
        cmpi      4112,r0               ; |109| 
        bge       L36                   ; |109| 
;*      Branch Occurs to L36            ; |109| 
L35:        
	.line	24
;----------------------------------------------------------------------
; 111 | buffer->buff[i] = 0x00;                                                
;----------------------------------------------------------------------
        ldiu      *+fp(2),ar0           ; |111| 
        addi      *+fp(1),ar0           ; |111| Unsigned
        sti       r1,*+ar0(4)           ; |111| 
	.line	22
        ldiu      1,r0                  ; |109| 
        addi      *+fp(2),r0            ; |109| 
        sti       r0,*+fp(2)            ; |109| 
        cmpi      4112,r0               ; |109| 
        blt       L35                   ; |109| 
;*      Branch Occurs to L35            ; |109| 
L36:        
	.line	28
;----------------------------------------------------------------------
; 115 | GIEP;                                                                  
;----------------------------------------------------------------------
	pop		ST			
L37:        
	.line	29
                                        ; Begin Epilog Code
        ldiu      *-fp(1),r1
        ldiu      *fp,fp
                                        ; Unallocate the Frame
        subi      4,sp
        bu        r1
;*      Branch Occurs to r1 
	.endfunc	116,000000000h,2



	.global	_INITIALIZING
	.bss	_INITIALIZING,1
	.sym	_INITIALIZING,_INITIALIZING,14,2,32
;******************************************************************************
;* CONSTANT TABLE                                                             *
;******************************************************************************
	.sect	".const"
	.bss	CL1,1
	.bss	CL2,1

	.sect	".cinit"
	.field  	2,32
	.field  	CL1+0,32
	.field  	_CRC16,32
	.field  	_INITIALIZING,32

	.sect	".text"
